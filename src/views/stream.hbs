<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
</head>
<style>

</style>
<script src="/socket.io/socket.io.js"></script>

<body>


    <hr>
    <h1>EMISION EN DIRECTO</h1>
    <button id="btnlive">hacer live</button>
    <video class="video" src="" id="videolive" autoplay="true"></video>
    <canvas id="preview"></canvas>
    <div id="livestatus" class="livestatus">

    </div>
    <hr>
    <h4>ver stream</h4>
    <img id="viewlive"></img>
    <script>
        const socket = io.connect();

        //live
        let canvas = document.querySelector("#preview")
        let context = canvas.getContext("2d")
        let btnlive = document.querySelector("#btnlive")
        canvas.style.display = 'none'
        canvas.width = 512;
        canvas.height = 380;

        context.width = canvas.width;
        context.height = canvas.height
        let video = document.querySelector("#videolive")

        function publishMsg(msg) {
            document.querySelector(".livestatus").innerText = msg
        }
        function loadCamare(stream) {
            video.srcObject = stream;
            publishMsg('camara funcionando...')
        }

        function errCamera() {
            publishMsg('error de camara...')
        }
        function verVideo(video, context) {
            context.drawImage(video, 0, 0, context.width, context.height)
            socket.emit('stream', canvas.toDataURL('image/webp'))

        }
        btnlive.addEventListener("click", () => {
            navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia)
            if (navigator.getUserMedia) {
                navigator.getUserMedia({ video: true }, loadCamare, errCamera)
            }
            let interval = setInterval(() => {
                verVideo(video, context)
            }, 10)
        });

        //ver streamen
        socket.on('stream', (data) => {
            document.getElementById("viewlive").src = data
        });



    </script>
</body>

</html>